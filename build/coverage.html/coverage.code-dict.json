{"/home/travis/build/npmtest/node-npmtest-jasmine-spec-reporter/test.js":"/* istanbul instrument in package npmtest_jasmine_spec_reporter */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-jasmine-spec-reporter/lib.npmtest_jasmine_spec_reporter.js":"/* istanbul instrument in package npmtest_jasmine_spec_reporter */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_jasmine_spec_reporter = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_jasmine_spec_reporter = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-jasmine-spec-reporter/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-jasmine-spec-reporter && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_jasmine_spec_reporter */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_jasmine_spec_reporter\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_jasmine_spec_reporter.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_jasmine_spec_reporter.rollup.js'] =\n            local.assetsDict['/assets.npmtest_jasmine_spec_reporter.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_jasmine_spec_reporter.__dirname + '/lib.npmtest_jasmine_spec_reporter.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-jasmine-spec-reporter/node_modules/jasmine-spec-reporter/built/main.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar spec_reporter_1 = require(\"./spec-reporter\");\nexports.SpecReporter = spec_reporter_1.SpecReporter;\nvar display_processor_1 = require(\"./display-processor\");\nexports.DisplayProcessor = display_processor_1.DisplayProcessor;\n//# sourceMappingURL=main.js.map","/home/travis/build/npmtest/node-npmtest-jasmine-spec-reporter/node_modules/jasmine-spec-reporter/built/spec-reporter.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar configuration_parser_1 = require(\"./configuration-parser\");\nvar execution_display_1 = require(\"./display/execution-display\");\nvar logger_1 = require(\"./display/logger\");\nvar summary_display_1 = require(\"./display/summary-display\");\nvar execution_metrics_1 = require(\"./execution-metrics\");\nvar default_processor_1 = require(\"./processors/default-processor\");\nvar spec_colors_processor_1 = require(\"./processors/spec-colors-processor\");\nvar spec_durations_processor_1 = require(\"./processors/spec-durations-processor\");\nvar spec_prefixes_processor_1 = require(\"./processors/spec-prefixes-processor\");\nvar suite_numbering_processor_1 = require(\"./processors/suite-numbering-processor\");\nvar SpecReporter = (function () {\n    function SpecReporter(configuration) {\n        this.specs = {\n            failed: [],\n            pending: [],\n            successful: []\n        };\n        this.configuration = configuration_parser_1.ConfigurationParser.parse(configuration);\n        var displayProcessors = SpecReporter.initProcessors(this.configuration);\n        var print = this.configuration.print;\n        this.logger = new logger_1.Logger(displayProcessors, print);\n        this.display = new execution_display_1.ExecutionDisplay(this.configuration, this.logger, this.specs, displayProcessors);\n        this.summary = new summary_display_1.SummaryDisplay(this.logger, this.configuration, this.specs);\n        this.metrics = new execution_metrics_1.ExecutionMetrics();\n    }\n    SpecReporter.initProcessors = function (configuration) {\n        var displayProcessors = [\n            new default_processor_1.DefaultProcessor(configuration),\n            new spec_prefixes_processor_1.SpecPrefixesProcessor(configuration),\n            new spec_colors_processor_1.SpecColorsProcessor(configuration),\n        ];\n        if (configuration.spec.displayDuration) {\n            displayProcessors.push(new spec_durations_processor_1.SpecDurationsProcessor(configuration));\n        }\n        if (configuration.suite.displayNumber) {\n            displayProcessors.push(new suite_numbering_processor_1.SuiteNumberingProcessor(configuration));\n        }\n        if (configuration.customProcessors) {\n            configuration.customProcessors.forEach(function (Processor) {\n                displayProcessors.push(new Processor(configuration));\n            });\n        }\n        return displayProcessors;\n    };\n    SpecReporter.prototype.jasmineStarted = function (suiteInfo) {\n        this.metrics.start(suiteInfo);\n        this.display.jasmineStarted(suiteInfo);\n    };\n    SpecReporter.prototype.jasmineDone = function (runDetails) {\n        this.metrics.stop(runDetails);\n        this.summary.display(this.metrics);\n    };\n    SpecReporter.prototype.suiteStarted = function (result) {\n        this.display.suiteStarted(result);\n    };\n    SpecReporter.prototype.suiteDone = function (result) {\n        this.display.suiteDone();\n    };\n    SpecReporter.prototype.specStarted = function (result) {\n        this.metrics.startSpec();\n        this.display.specStarted(result);\n    };\n    SpecReporter.prototype.specDone = function (result) {\n        this.metrics.stopSpec(result);\n        if (result.status === \"pending\") {\n            this.metrics.pendingSpecs++;\n            this.display.pending(result);\n        }\n        else if (result.status === \"passed\") {\n            this.metrics.successfulSpecs++;\n            this.display.successful(result);\n        }\n        else if (result.status === \"failed\") {\n            this.metrics.failedSpecs++;\n            this.display.failed(result);\n        }\n    };\n    return SpecReporter;\n}());\nexports.SpecReporter = SpecReporter;\n//# sourceMappingURL=spec-reporter.js.map","/home/travis/build/npmtest/node-npmtest-jasmine-spec-reporter/node_modules/jasmine-spec-reporter/built/configuration-parser.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ConfigurationParser = (function () {\n    function ConfigurationParser() {\n    }\n    ConfigurationParser.parse = function (conf) {\n        return ConfigurationParser.merge(ConfigurationParser.defaultConfiguration, conf);\n    };\n    ConfigurationParser.merge = function (template, override) {\n        var result = {};\n        for (var key in template) {\n            if (template[key] instanceof Object\n                && !(template[key] instanceof Array)\n                && !(template[key] instanceof Function)\n                && override instanceof Object\n                && override[key] instanceof Object\n                && !(override[key] instanceof Array)\n                && !(override[key] instanceof Function)) {\n                result[key] = ConfigurationParser.merge(template[key], override[key]);\n            }\n            else if (override instanceof Object\n                && Object.keys(override).indexOf(key) !== -1) {\n                result[key] = override[key];\n            }\n            else {\n                result[key] = template[key];\n            }\n        }\n        if (override instanceof Object && override.customOptions) {\n            result.customOptions = override.customOptions;\n        }\n        return result;\n    };\n    return ConfigurationParser;\n}());\nConfigurationParser.isWindows = process && process.platform === \"win32\";\nConfigurationParser.defaultConfiguration = {\n    colors: {\n        enabled: true,\n        failed: \"red\",\n        pending: \"yellow\",\n        successful: \"green\",\n    },\n    customProcessors: [],\n    prefixes: {\n        failed: ConfigurationParser.isWindows ? \"\\u00D7 \" : \"✗ \",\n        pending: \"* \",\n        successful: ConfigurationParser.isWindows ? \"\\u221A \" : \"✓ \",\n    },\n    print: function (stuff) { return console.log(stuff); },\n    spec: {\n        displayDuration: false,\n        displayErrorMessages: true,\n        displayFailed: true,\n        displayPending: false,\n        displayStacktrace: false,\n        displaySuccessful: true,\n    },\n    stacktrace: {\n        filter: function (stacktrace) {\n            var lines = stacktrace.split(\"\\n\");\n            var filtered = [];\n            for (var i = 1; i < lines.length; i++) {\n                if (!/(jasmine[^\\/]*\\.js|Timer\\.listOnTimeout)/.test(lines[i])) {\n                    filtered.push(lines[i]);\n                }\n            }\n            return filtered.join(\"\\n\");\n        }\n    },\n    suite: {\n        displayNumber: false,\n    },\n    summary: {\n        displayDuration: true,\n        displayErrorMessages: true,\n        displayFailed: true,\n        displayPending: true,\n        displayStacktrace: false,\n        displaySuccessful: false,\n    },\n};\nexports.ConfigurationParser = ConfigurationParser;\n//# sourceMappingURL=configuration-parser.js.map","/home/travis/build/npmtest/node-npmtest-jasmine-spec-reporter/node_modules/jasmine-spec-reporter/built/display/execution-display.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar colors_display_1 = require(\"./colors-display\");\nvar ExecutionDisplay = (function () {\n    function ExecutionDisplay(configuration, logger, specs, displayProcessors) {\n        this.configuration = configuration;\n        this.logger = logger;\n        this.specs = specs;\n        this.suiteHierarchy = [];\n        this.suiteHierarchyDisplayed = [];\n        colors_display_1.ColorsDisplay.init(this.configuration);\n        this.hasCustomDisplaySpecStarted = ExecutionDisplay.hasCustomDisplaySpecStarted(displayProcessors);\n    }\n    ExecutionDisplay.hasCustomDisplaySpecStarted = function (processors) {\n        var isDisplayed = false;\n        processors.forEach(function (processor) {\n            var log = \"foo\";\n            var result = processor.displaySpecStarted({ id: \"bar\", description: \"bar\", fullName: \"bar\" }, log);\n            isDisplayed = isDisplayed || result !== log;\n        });\n        return isDisplayed;\n    };\n    ExecutionDisplay.prototype.jasmineStarted = function (suiteInfo) {\n        this.logger.process(suiteInfo, function (displayProcessor, object, log) {\n            return displayProcessor.displayJasmineStarted(object, log);\n        });\n    };\n    ExecutionDisplay.prototype.specStarted = function (result) {\n        if (this.hasCustomDisplaySpecStarted) {\n            this.ensureSuiteDisplayed();\n            this.logger.process(result, function (displayProcessor, object, log) {\n                return displayProcessor.displaySpecStarted(object, log);\n            });\n        }\n    };\n    ExecutionDisplay.prototype.successful = function (result) {\n        this.specs.successful.push(result);\n        if (this.configuration.spec.displaySuccessful) {\n            this.ensureSuiteDisplayed();\n            this.logger.process(result, function (displayProcessor, object, log) {\n                return displayProcessor.displaySuccessfulSpec(object, log);\n            });\n        }\n    };\n    ExecutionDisplay.prototype.failed = function (result) {\n        this.specs.failed.push(result);\n        if (this.configuration.spec.displayFailed) {\n            this.ensureSuiteDisplayed();\n            this.logger.process(result, function (displayProcessor, object, log) {\n                return displayProcessor.displayFailedSpec(object, log);\n            });\n            if (this.configuration.spec.displayErrorMessages) {\n                this.logger.increaseIndent();\n                this.logger.process(result, function (displayProcessor, object, log) {\n                    return displayProcessor.displaySpecErrorMessages(object, log);\n                });\n                this.logger.decreaseIndent();\n            }\n        }\n    };\n    ExecutionDisplay.prototype.pending = function (result) {\n        this.specs.pending.push(result);\n        if (this.configuration.spec.displayPending) {\n            this.ensureSuiteDisplayed();\n            this.logger.process(result, function (displayProcessor, object, log) {\n                return displayProcessor.displayPendingSpec(object, log);\n            });\n        }\n    };\n    ExecutionDisplay.prototype.suiteStarted = function (result) {\n        this.suiteHierarchy.push(result);\n    };\n    ExecutionDisplay.prototype.suiteDone = function () {\n        var suite = this.suiteHierarchy.pop();\n        if (this.suiteHierarchyDisplayed[this.suiteHierarchyDisplayed.length - 1] === suite) {\n            this.suiteHierarchyDisplayed.pop();\n        }\n        this.logger.newLine();\n        this.logger.decreaseIndent();\n    };\n    ExecutionDisplay.prototype.ensureSuiteDisplayed = function () {\n        if (this.suiteHierarchy.length !== 0) {\n            for (var i = this.suiteHierarchyDisplayed.length; i < this.suiteHierarchy.length; i++) {\n                this.suiteHierarchyDisplayed.push(this.suiteHierarchy[i]);\n                this.displaySuite(this.suiteHierarchy[i]);\n            }\n        }\n        else {\n            var name_1 = \"Top level suite\";\n            var topLevelSuite = {\n                description: name_1,\n                fullName: name_1,\n                id: name_1,\n            };\n            this.suiteHierarchy.push(topLevelSuite);\n            this.suiteHierarchyDisplayed.push(topLevelSuite);\n            this.displaySuite(topLevelSuite);\n        }\n    };\n    ExecutionDisplay.prototype.displaySuite = function (suite) {\n        this.logger.newLine();\n        this.computeSuiteIndent();\n        this.logger.process(suite, function (displayProcessor, object, log) {\n            return displayProcessor.displaySuite(object, log);\n        });\n        this.logger.increaseIndent();\n    };\n    ExecutionDisplay.prototype.computeSuiteIndent = function () {\n        var _this = this;\n        this.logger.resetIndent();\n        this.suiteHierarchyDisplayed.forEach(function () { return _this.logger.increaseIndent(); });\n    };\n    return ExecutionDisplay;\n}());\nexports.ExecutionDisplay = ExecutionDisplay;\n//# sourceMappingURL=execution-display.js.map","/home/travis/build/npmtest/node-npmtest-jasmine-spec-reporter/node_modules/jasmine-spec-reporter/built/display/colors-display.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar colors = require(\"colors\");\nvar ColorsDisplay = (function () {\n    function ColorsDisplay() {\n    }\n    ColorsDisplay.init = function (configuration) {\n        colors.enabled = configuration.colors.enabled;\n        colors.setTheme({\n            failed: configuration.colors.failed,\n            pending: configuration.colors.pending,\n            successful: configuration.colors.successful,\n        });\n    };\n    return ColorsDisplay;\n}());\nexports.ColorsDisplay = ColorsDisplay;\n//# sourceMappingURL=colors-display.js.map","/home/travis/build/npmtest/node-npmtest-jasmine-spec-reporter/node_modules/jasmine-spec-reporter/built/display/logger.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Logger = (function () {\n    function Logger(displayProcessors, print) {\n        this.displayProcessors = displayProcessors;\n        this.print = print;\n        this.indent = \"  \";\n        this.currentIndent = \"\";\n        this.lastWasNewLine = false;\n    }\n    Logger.prototype.log = function (stuff) {\n        var _this = this;\n        stuff.split(\"\\n\").forEach(function (line) {\n            _this.print(line !== \"\" ? _this.currentIndent + line : line);\n        });\n        this.lastWasNewLine = false;\n    };\n    Logger.prototype.process = function (object, processFunction) {\n        var log = \"\";\n        this.displayProcessors.forEach(function (displayProcessor) {\n            log = processFunction(displayProcessor, object, log);\n        });\n        this.log(log);\n    };\n    Logger.prototype.newLine = function () {\n        if (!this.lastWasNewLine) {\n            this.log(\"\");\n            this.lastWasNewLine = true;\n        }\n    };\n    Logger.prototype.resetIndent = function () {\n        this.currentIndent = \"\";\n    };\n    Logger.prototype.increaseIndent = function () {\n        this.currentIndent += this.indent;\n    };\n    Logger.prototype.decreaseIndent = function () {\n        this.currentIndent = this.currentIndent.substr(0, this.currentIndent.length - this.indent.length);\n    };\n    return Logger;\n}());\nexports.Logger = Logger;\n//# sourceMappingURL=logger.js.map","/home/travis/build/npmtest/node-npmtest-jasmine-spec-reporter/node_modules/jasmine-spec-reporter/built/display/summary-display.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar SummaryDisplay = (function () {\n    function SummaryDisplay(logger, configuration, specs) {\n        this.logger = logger;\n        this.configuration = configuration;\n        this.specs = specs;\n    }\n    SummaryDisplay.prototype.display = function (metrics) {\n        var pluralizedSpec = (metrics.totalSpecsDefined === 1 ? \" spec\" : \" specs\");\n        var execution = \"Executed \" + metrics.executedSpecs + \" of \" + metrics.totalSpecsDefined + pluralizedSpec;\n        var successful = (metrics.failedSpecs === 0) ? \" SUCCESS\" : \"\";\n        var failed = (metrics.failedSpecs > 0) ? \" (\" + metrics.failedSpecs + \" FAILED)\" : \"\";\n        var pending = (metrics.pendingSpecs > 0) ? \" (\" + metrics.pendingSpecs + \" PENDING)\" : \"\";\n        var skipped = (metrics.skippedSpecs > 0) ? \" (\" + metrics.skippedSpecs + \" SKIPPED)\" : \"\";\n        var duration = this.configuration.summary.displayDuration ? \" in \" + metrics.duration : \"\";\n        this.logger.resetIndent();\n        this.logger.newLine();\n        if (this.configuration.summary.displaySuccessful && metrics.successfulSpecs > 0) {\n            this.successesSummary();\n        }\n        if (this.configuration.summary.displayFailed && metrics.failedSpecs > 0) {\n            this.failuresSummary();\n        }\n        if (this.configuration.summary.displayPending && metrics.pendingSpecs > 0) {\n            this.pendingsSummary();\n        }\n        this.logger.log(execution + successful.successful + failed.failed + pending.pending + skipped + duration + \".\");\n        if (metrics.random) {\n            this.logger.log(\"Randomized with seed \" + metrics.seed + \".\");\n        }\n    };\n    SummaryDisplay.prototype.successesSummary = function () {\n        this.logger.log(\"**************************************************\");\n        this.logger.log(\"*                   Successes                    *\");\n        this.logger.log(\"**************************************************\");\n        this.logger.newLine();\n        for (var i = 0; i < this.specs.successful.length; i++) {\n            this.successfulSummary(this.specs.successful[i], i + 1);\n            this.logger.newLine();\n        }\n        this.logger.newLine();\n        this.logger.resetIndent();\n    };\n    SummaryDisplay.prototype.successfulSummary = function (spec, index) {\n        this.logger.log(index + \") \" + spec.fullName);\n    };\n    SummaryDisplay.prototype.failuresSummary = function () {\n        this.logger.log(\"**************************************************\");\n        this.logger.log(\"*                    Failures                    *\");\n        this.logger.log(\"**************************************************\");\n        this.logger.newLine();\n        for (var i = 0; i < this.specs.failed.length; i++) {\n            this.failedSummary(this.specs.failed[i], i + 1);\n            this.logger.newLine();\n        }\n        this.logger.newLine();\n        this.logger.resetIndent();\n    };\n    SummaryDisplay.prototype.failedSummary = function (spec, index) {\n        this.logger.log(index + \") \" + spec.fullName);\n        if (this.configuration.summary.displayErrorMessages) {\n            this.logger.increaseIndent();\n            this.logger.process(spec, function (displayProcessor, object, log) {\n                return displayProcessor.displaySummaryErrorMessages(object, log);\n            });\n            this.logger.decreaseIndent();\n        }\n    };\n    SummaryDisplay.prototype.pendingsSummary = function () {\n        this.logger.log(\"**************************************************\");\n        this.logger.log(\"*                    Pending                     *\");\n        this.logger.log(\"**************************************************\");\n        this.logger.newLine();\n        for (var i = 0; i < this.specs.pending.length; i++) {\n            this.pendingSummary(this.specs.pending[i], i + 1);\n            this.logger.newLine();\n        }\n        this.logger.newLine();\n        this.logger.resetIndent();\n    };\n    SummaryDisplay.prototype.pendingSummary = function (spec, index) {\n        this.logger.log(index + \") \" + spec.fullName);\n        this.logger.increaseIndent();\n        var pendingReason = spec.pendingReason ? spec.pendingReason : \"No reason given\";\n        this.logger.log(pendingReason.pending);\n        this.logger.resetIndent();\n    };\n    return SummaryDisplay;\n}());\nexports.SummaryDisplay = SummaryDisplay;\n//# sourceMappingURL=summary-display.js.map","/home/travis/build/npmtest/node-npmtest-jasmine-spec-reporter/node_modules/jasmine-spec-reporter/built/execution-metrics.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ExecutionMetrics = (function () {\n    function ExecutionMetrics() {\n        this.successfulSpecs = 0;\n        this.failedSpecs = 0;\n        this.pendingSpecs = 0;\n        this.skippedSpecs = 0;\n        this.totalSpecsDefined = 0;\n        this.executedSpecs = 0;\n        this.random = false;\n    }\n    ExecutionMetrics.pluralize = function (count) {\n        return count > 1 ? \"s\" : \"\";\n    };\n    ExecutionMetrics.prototype.start = function (suiteInfo) {\n        this.startTime = (new Date()).getTime();\n        this.totalSpecsDefined = suiteInfo && suiteInfo.totalSpecsDefined ? suiteInfo.totalSpecsDefined : 0;\n    };\n    ExecutionMetrics.prototype.stop = function (runDetails) {\n        var totalSpecs = this.failedSpecs + this.successfulSpecs + this.pendingSpecs;\n        this.duration = this.formatDuration((new Date()).getTime() - this.startTime);\n        this.executedSpecs = this.failedSpecs + this.successfulSpecs;\n        this.totalSpecsDefined = this.totalSpecsDefined ? this.totalSpecsDefined : totalSpecs;\n        this.skippedSpecs = this.totalSpecsDefined - totalSpecs;\n        this.random = runDetails.order.random;\n        this.seed = runDetails.order.seed;\n    };\n    ExecutionMetrics.prototype.startSpec = function () {\n        this.specStartTime = (new Date()).getTime();\n    };\n    ExecutionMetrics.prototype.stopSpec = function (result) {\n        result.duration = this.formatDuration((new Date()).getTime() - this.specStartTime);\n    };\n    ExecutionMetrics.prototype.formatDuration = function (durationInMs) {\n        var duration = \"\";\n        var durationInSecs = durationInMs / 1000;\n        var durationInMins;\n        var durationInHrs;\n        if (durationInSecs < 1) {\n            return durationInSecs + \" sec\" + ExecutionMetrics.pluralize(durationInSecs);\n        }\n        durationInSecs = Math.round(durationInSecs);\n        if (durationInSecs < 60) {\n            return durationInSecs + \" sec\" + ExecutionMetrics.pluralize(durationInSecs);\n        }\n        durationInMins = Math.floor(durationInSecs / 60);\n        durationInSecs = durationInSecs % 60;\n        if (durationInSecs) {\n            duration = \" \" + durationInSecs + \" sec\" + ExecutionMetrics.pluralize(durationInSecs);\n        }\n        if (durationInMins < 60) {\n            return durationInMins + \" min\" + ExecutionMetrics.pluralize(durationInMins) + duration;\n        }\n        durationInHrs = Math.floor(durationInMins / 60);\n        durationInMins = durationInMins % 60;\n        if (durationInMins) {\n            duration = \" \" + durationInMins + \" min\" + ExecutionMetrics.pluralize(durationInMins) + duration;\n        }\n        return durationInHrs + \" hour\" + ExecutionMetrics.pluralize(durationInHrs) + duration;\n    };\n    return ExecutionMetrics;\n}());\nexports.ExecutionMetrics = ExecutionMetrics;\n//# sourceMappingURL=execution-metrics.js.map","/home/travis/build/npmtest/node-npmtest-jasmine-spec-reporter/node_modules/jasmine-spec-reporter/built/processors/default-processor.js":"\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar display_processor_1 = require(\"../display-processor\");\nvar DefaultProcessor = (function (_super) {\n    __extends(DefaultProcessor, _super);\n    function DefaultProcessor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    DefaultProcessor.displaySpecDescription = function (spec) {\n        return spec.description;\n    };\n    DefaultProcessor.prototype.displayJasmineStarted = function () {\n        return \"Spec started\";\n    };\n    DefaultProcessor.prototype.displaySuite = function (suite) {\n        return suite.description;\n    };\n    DefaultProcessor.prototype.displaySuccessfulSpec = function (spec) {\n        return DefaultProcessor.displaySpecDescription(spec);\n    };\n    DefaultProcessor.prototype.displayFailedSpec = function (spec) {\n        return DefaultProcessor.displaySpecDescription(spec);\n    };\n    DefaultProcessor.prototype.displaySpecErrorMessages = function (spec) {\n        return this.displayErrorMessages(spec, this.configuration.spec.displayStacktrace);\n    };\n    DefaultProcessor.prototype.displaySummaryErrorMessages = function (spec) {\n        return this.displayErrorMessages(spec, this.configuration.summary.displayStacktrace);\n    };\n    DefaultProcessor.prototype.displayPendingSpec = function (spec) {\n        return DefaultProcessor.displaySpecDescription(spec);\n    };\n    DefaultProcessor.prototype.displayErrorMessages = function (spec, withStacktrace) {\n        var logs = [];\n        for (var _i = 0, _a = spec.failedExpectations; _i < _a.length; _i++) {\n            var failedExpectation = _a[_i];\n            logs.push(\"- \".failed + failedExpectation.message.failed);\n            if (withStacktrace && failedExpectation.stack) {\n                logs.push(this.configuration.stacktrace.filter(failedExpectation.stack));\n            }\n        }\n        return logs.join(\"\\n\");\n    };\n    return DefaultProcessor;\n}(display_processor_1.DisplayProcessor));\nexports.DefaultProcessor = DefaultProcessor;\n//# sourceMappingURL=default-processor.js.map","/home/travis/build/npmtest/node-npmtest-jasmine-spec-reporter/node_modules/jasmine-spec-reporter/built/display-processor.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DisplayProcessor = (function () {\n    function DisplayProcessor(configuration) {\n        this.configuration = configuration;\n    }\n    DisplayProcessor.prototype.displayJasmineStarted = function (info, log) {\n        return log;\n    };\n    DisplayProcessor.prototype.displaySuite = function (suite, log) {\n        return log;\n    };\n    DisplayProcessor.prototype.displaySpecStarted = function (spec, log) {\n        return log;\n    };\n    DisplayProcessor.prototype.displaySuccessfulSpec = function (spec, log) {\n        return log;\n    };\n    DisplayProcessor.prototype.displayFailedSpec = function (spec, log) {\n        return log;\n    };\n    DisplayProcessor.prototype.displaySpecErrorMessages = function (spec, log) {\n        return log;\n    };\n    DisplayProcessor.prototype.displaySummaryErrorMessages = function (spec, log) {\n        return log;\n    };\n    DisplayProcessor.prototype.displayPendingSpec = function (spec, log) {\n        return log;\n    };\n    return DisplayProcessor;\n}());\nexports.DisplayProcessor = DisplayProcessor;\n//# sourceMappingURL=display-processor.js.map","/home/travis/build/npmtest/node-npmtest-jasmine-spec-reporter/node_modules/jasmine-spec-reporter/built/processors/spec-colors-processor.js":"\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar display_processor_1 = require(\"../display-processor\");\nvar SpecColorsProcessor = (function (_super) {\n    __extends(SpecColorsProcessor, _super);\n    function SpecColorsProcessor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SpecColorsProcessor.prototype.displaySuccessfulSpec = function (spec, log) {\n        return log.successful;\n    };\n    SpecColorsProcessor.prototype.displayFailedSpec = function (spec, log) {\n        return log.failed;\n    };\n    SpecColorsProcessor.prototype.displayPendingSpec = function (spec, log) {\n        return log.pending;\n    };\n    return SpecColorsProcessor;\n}(display_processor_1.DisplayProcessor));\nexports.SpecColorsProcessor = SpecColorsProcessor;\n//# sourceMappingURL=spec-colors-processor.js.map","/home/travis/build/npmtest/node-npmtest-jasmine-spec-reporter/node_modules/jasmine-spec-reporter/built/processors/spec-durations-processor.js":"\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar display_processor_1 = require(\"../display-processor\");\nvar SpecDurationsProcessor = (function (_super) {\n    __extends(SpecDurationsProcessor, _super);\n    function SpecDurationsProcessor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SpecDurationsProcessor.displayDuration = function (spec, log) {\n        return log + \" (\" + spec.duration + \")\";\n    };\n    SpecDurationsProcessor.prototype.displaySuccessfulSpec = function (spec, log) {\n        return SpecDurationsProcessor.displayDuration(spec, log);\n    };\n    SpecDurationsProcessor.prototype.displayFailedSpec = function (spec, log) {\n        return SpecDurationsProcessor.displayDuration(spec, log);\n    };\n    return SpecDurationsProcessor;\n}(display_processor_1.DisplayProcessor));\nexports.SpecDurationsProcessor = SpecDurationsProcessor;\n//# sourceMappingURL=spec-durations-processor.js.map","/home/travis/build/npmtest/node-npmtest-jasmine-spec-reporter/node_modules/jasmine-spec-reporter/built/processors/spec-prefixes-processor.js":"\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar display_processor_1 = require(\"../display-processor\");\nvar SpecPrefixesProcessor = (function (_super) {\n    __extends(SpecPrefixesProcessor, _super);\n    function SpecPrefixesProcessor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SpecPrefixesProcessor.prototype.displaySuccessfulSpec = function (spec, log) {\n        return this.configuration.prefixes.successful + log;\n    };\n    SpecPrefixesProcessor.prototype.displayFailedSpec = function (spec, log) {\n        return this.configuration.prefixes.failed + log;\n    };\n    SpecPrefixesProcessor.prototype.displayPendingSpec = function (spec, log) {\n        return this.configuration.prefixes.pending + log;\n    };\n    return SpecPrefixesProcessor;\n}(display_processor_1.DisplayProcessor));\nexports.SpecPrefixesProcessor = SpecPrefixesProcessor;\n//# sourceMappingURL=spec-prefixes-processor.js.map","/home/travis/build/npmtest/node-npmtest-jasmine-spec-reporter/node_modules/jasmine-spec-reporter/built/processors/suite-numbering-processor.js":"\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar display_processor_1 = require(\"../display-processor\");\nvar SuiteNumberingProcessor = (function (_super) {\n    __extends(SuiteNumberingProcessor, _super);\n    function SuiteNumberingProcessor() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.suiteHierarchy = [];\n        return _this;\n    }\n    SuiteNumberingProcessor.getParentName = function (element) {\n        return element.fullName.replace(element.description, \"\").trim();\n    };\n    SuiteNumberingProcessor.prototype.displaySuite = function (suite, log) {\n        return this.computeNumber(suite) + \" \" + log;\n    };\n    SuiteNumberingProcessor.prototype.computeNumber = function (suite) {\n        this.computeHierarchy(suite);\n        return this.computeHierarchyNumber();\n    };\n    SuiteNumberingProcessor.prototype.computeHierarchy = function (suite) {\n        var parentName = SuiteNumberingProcessor.getParentName(suite);\n        var i = 0;\n        for (; i < this.suiteHierarchy.length; i++) {\n            if (this.suiteHierarchy[i].name === parentName) {\n                this.suiteHierarchy[i].number++;\n                this.suiteHierarchy.splice(i + 1, this.suiteHierarchy.length - i - 1);\n                break;\n            }\n        }\n        if (i === this.suiteHierarchy.length) {\n            this.suiteHierarchy.push({ name: parentName, number: 1 });\n        }\n    };\n    SuiteNumberingProcessor.prototype.computeHierarchyNumber = function () {\n        var hierarchyNumber = \"\";\n        for (var _i = 0, _a = this.suiteHierarchy; _i < _a.length; _i++) {\n            var suite = _a[_i];\n            hierarchyNumber += suite.number + \".\";\n        }\n        return hierarchyNumber.substring(0, hierarchyNumber.length - 1);\n    };\n    return SuiteNumberingProcessor;\n}(display_processor_1.DisplayProcessor));\nexports.SuiteNumberingProcessor = SuiteNumberingProcessor;\n//# sourceMappingURL=suite-numbering-processor.js.map","/home/travis/build/npmtest/node-npmtest-jasmine-spec-reporter/node_modules/jasmine-spec-reporter/built/configuration.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Configuration = (function () {\n    function Configuration() {\n    }\n    return Configuration;\n}());\nexports.Configuration = Configuration;\n//# sourceMappingURL=configuration.js.map","/home/travis/build/npmtest/node-npmtest-jasmine-spec-reporter/node_modules/jasmine-spec-reporter/built/custom-reporter-result.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=custom-reporter-result.js.map","/home/travis/build/npmtest/node-npmtest-jasmine-spec-reporter/node_modules/jasmine-spec-reporter/built/execution-display.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar colors_display_1 = require(\"./display/colors-display\");\nvar default_processor_1 = require(\"./display/processors/default-processor\");\nvar spec_colors_processor_1 = require(\"./display/processors/spec-colors-processor\");\nvar spec_durations_processor_1 = require(\"./display/processors/spec-durations-processor\");\nvar spec_prefixes_processor_1 = require(\"./display/processors/spec-prefixes-processor\");\nvar suite_numbering_processor_1 = require(\"./display/processors/suite-numbering-processor\");\nvar ExecutionDisplay = (function () {\n    function ExecutionDisplay(configuration) {\n        this.configuration = configuration;\n        this.indent = \"  \";\n        this.currentIndent = \"\";\n        this.suiteHierarchy = [];\n        this.suiteHierarchyDisplayed = [];\n        this.successfulSpecs = [];\n        this.failedSpecs = [];\n        this.pendingSpecs = [];\n        this.lastWasNewLine = false;\n        colors_display_1.ColorsDisplay.init(this.configuration);\n        this.displayProcessors = ExecutionDisplay.initProcessors(this.configuration);\n        this.hasCustomDisplaySpecStarted = ExecutionDisplay.hasCustomDisplaySpecStarted(this.displayProcessors);\n    }\n    ExecutionDisplay.initProcessors = function (configuration) {\n        var displayProcessors = [\n            new default_processor_1.DefaultProcessor(configuration),\n            new spec_prefixes_processor_1.SpecPrefixesProcessor(configuration),\n            new spec_colors_processor_1.SpecColorsProcessor(configuration),\n        ];\n        if (configuration.spec.displayDuration) {\n            displayProcessors.push(new spec_durations_processor_1.SpecDurationsProcessor(configuration));\n        }\n        if (configuration.suite.displayNumber) {\n            displayProcessors.push(new suite_numbering_processor_1.SuiteNumberingProcessor(configuration));\n        }\n        if (configuration.customProcessors) {\n            configuration.customProcessors.forEach(function (Processor) {\n                displayProcessors.push(new Processor(configuration));\n            });\n        }\n        return displayProcessors;\n    };\n    ExecutionDisplay.hasCustomDisplaySpecStarted = function (processors) {\n        var isDisplayed = false;\n        processors.forEach(function (processor) {\n            var log = \"foo\";\n            var result = processor.displaySpecStarted({ id: \"bar\", description: \"bar\", fullName: \"bar\" }, log);\n            isDisplayed = isDisplayed || result !== log;\n        });\n        return isDisplayed;\n    };\n    ExecutionDisplay.prototype.jasmineStarted = function (suiteInfo) {\n        this.process(suiteInfo, function (displayProcessor, object, log) {\n            return displayProcessor.displayJasmineStarted(object, log);\n        });\n    };\n    ExecutionDisplay.prototype.summary = function (metrics) {\n        var pluralizedSpec = (metrics.totalSpecsDefined === 1 ? \" spec\" : \" specs\");\n        var execution = \"Executed \" + metrics.executedSpecs + \" of \" + metrics.totalSpecsDefined + pluralizedSpec;\n        var successful = (metrics.failedSpecs === 0) ? \" SUCCESS\" : \"\";\n        var failed = (metrics.failedSpecs > 0) ? \" (\" + metrics.failedSpecs + \" FAILED)\" : \"\";\n        var pending = (metrics.pendingSpecs > 0) ? \" (\" + metrics.pendingSpecs + \" PENDING)\" : \"\";\n        var skipped = (metrics.skippedSpecs > 0) ? \" (\" + metrics.skippedSpecs + \" SKIPPED)\" : \"\";\n        var duration = this.configuration.summary.displayDuration ? \" in \" + metrics.duration : \"\";\n        this.resetIndent();\n        this.newLine();\n        if (this.configuration.summary.displaySuccessful && metrics.successfulSpecs > 0) {\n            this.successesSummary();\n        }\n        if (this.configuration.summary.displayFailed && metrics.failedSpecs > 0) {\n            this.failuresSummary();\n        }\n        if (this.configuration.summary.displayPending && metrics.pendingSpecs > 0) {\n            this.pendingsSummary();\n        }\n        this.log(execution + successful.successful + failed.failed + pending.pending + skipped + duration + \".\");\n        if (metrics.random) {\n            this.log(\"Randomized with seed \" + metrics.seed + \".\");\n        }\n    };\n    ExecutionDisplay.prototype.specStarted = function (result) {\n        if (this.hasCustomDisplaySpecStarted) {\n            this.ensureSuiteDisplayed();\n            this.process(result, function (displayProcessor, object, log) {\n                return displayProcessor.displaySpecStarted(object, log);\n            });\n        }\n    };\n    ExecutionDisplay.prototype.successful = function (result) {\n        this.successfulSpecs.push(result);\n        if (this.configuration.spec.displaySuccessful) {\n            this.ensureSuiteDisplayed();\n            this.process(result, function (displayProcessor, object, log) {\n                return displayProcessor.displaySuccessfulSpec(object, log);\n            });\n        }\n    };\n    ExecutionDisplay.prototype.failed = function (result) {\n        this.failedSpecs.push(result);\n        if (this.configuration.spec.displayFailed) {\n            this.ensureSuiteDisplayed();\n            this.process(result, function (displayProcessor, object, log) {\n                return displayProcessor.displayFailedSpec(object, log);\n            });\n            if (this.configuration.spec.displayErrorMessages) {\n                this.increaseIndent();\n                this.process(result, function (displayProcessor, object, log) {\n                    return displayProcessor.displaySpecErrorMessages(object, log);\n                });\n                this.decreaseIndent();\n            }\n        }\n    };\n    ExecutionDisplay.prototype.pending = function (result) {\n        this.pendingSpecs.push(result);\n        if (this.configuration.spec.displayPending) {\n            this.ensureSuiteDisplayed();\n            this.process(result, function (displayProcessor, object, log) {\n                return displayProcessor.displayPendingSpec(object, log);\n            });\n        }\n    };\n    ExecutionDisplay.prototype.suiteStarted = function (result) {\n        this.suiteHierarchy.push(result);\n    };\n    ExecutionDisplay.prototype.suiteDone = function () {\n        var suite = this.suiteHierarchy.pop();\n        if (this.suiteHierarchyDisplayed[this.suiteHierarchyDisplayed.length - 1] === suite) {\n            this.suiteHierarchyDisplayed.pop();\n        }\n        this.newLine();\n        this.decreaseIndent();\n    };\n    ExecutionDisplay.prototype.successesSummary = function () {\n        this.log(\"**************************************************\");\n        this.log(\"*                   Successes                    *\");\n        this.log(\"**************************************************\");\n        this.newLine();\n        for (var i = 0; i < this.successfulSpecs.length; i++) {\n            this.successfulSummary(this.successfulSpecs[i], i + 1);\n            this.newLine();\n        }\n        this.newLine();\n        this.resetIndent();\n    };\n    ExecutionDisplay.prototype.successfulSummary = function (spec, index) {\n        this.log(index + \") \" + spec.fullName);\n    };\n    ExecutionDisplay.prototype.failuresSummary = function () {\n        this.log(\"**************************************************\");\n        this.log(\"*                    Failures                    *\");\n        this.log(\"**************************************************\");\n        this.newLine();\n        for (var i = 0; i < this.failedSpecs.length; i++) {\n            this.failedSummary(this.failedSpecs[i], i + 1);\n            this.newLine();\n        }\n        this.newLine();\n        this.resetIndent();\n    };\n    ExecutionDisplay.prototype.failedSummary = function (spec, index) {\n        this.log(index + \") \" + spec.fullName);\n        if (this.configuration.summary.displayErrorMessages) {\n            this.increaseIndent();\n            this.process(spec, function (displayProcessor, object, log) {\n                return displayProcessor.displaySummaryErrorMessages(object, log);\n            });\n            this.decreaseIndent();\n        }\n    };\n    ExecutionDisplay.prototype.pendingsSummary = function () {\n        this.log(\"**************************************************\");\n        this.log(\"*                    Pending                     *\");\n        this.log(\"**************************************************\");\n        this.newLine();\n        for (var i = 0; i < this.pendingSpecs.length; i++) {\n            this.pendingSummary(this.pendingSpecs[i], i + 1);\n            this.newLine();\n        }\n        this.newLine();\n        this.resetIndent();\n    };\n    ExecutionDisplay.prototype.pendingSummary = function (spec, index) {\n        this.log(index + \") \" + spec.fullName);\n        this.increaseIndent();\n        var pendingReason = spec.pendingReason ? spec.pendingReason : \"No reason given\";\n        this.log(pendingReason.pending);\n        this.resetIndent();\n    };\n    ExecutionDisplay.prototype.ensureSuiteDisplayed = function () {\n        if (this.suiteHierarchy.length !== 0) {\n            for (var i = this.suiteHierarchyDisplayed.length; i < this.suiteHierarchy.length; i++) {\n                this.suiteHierarchyDisplayed.push(this.suiteHierarchy[i]);\n                this.displaySuite(this.suiteHierarchy[i]);\n            }\n        }\n        else {\n            var name_1 = \"Top level suite\";\n            var topLevelSuite = {\n                description: name_1,\n                fullName: name_1,\n                id: name_1,\n            };\n            this.suiteHierarchy.push(topLevelSuite);\n            this.suiteHierarchyDisplayed.push(topLevelSuite);\n            this.displaySuite(topLevelSuite);\n        }\n    };\n    ExecutionDisplay.prototype.displaySuite = function (suite) {\n        this.newLine();\n        this.computeSuiteIndent();\n        this.process(suite, function (displayProcessor, object, log) {\n            return displayProcessor.displaySuite(object, log);\n        });\n        this.increaseIndent();\n    };\n    ExecutionDisplay.prototype.process = function (object, processFunction) {\n        var log = \"\";\n        this.displayProcessors.forEach(function (displayProcessor) {\n            log = processFunction(displayProcessor, object, log);\n        });\n        this.log(log);\n    };\n    ExecutionDisplay.prototype.computeSuiteIndent = function () {\n        var _this = this;\n        this.resetIndent();\n        this.suiteHierarchyDisplayed.forEach(function () { return _this.increaseIndent(); });\n    };\n    ExecutionDisplay.prototype.log = function (stuff) {\n        var _this = this;\n        stuff.split(\"\\n\").forEach(function (line) {\n            console.log(line !== \"\" ? _this.currentIndent + line : line);\n        });\n        this.lastWasNewLine = false;\n    };\n    ExecutionDisplay.prototype.newLine = function () {\n        if (!this.lastWasNewLine) {\n            console.log(\"\");\n            this.lastWasNewLine = true;\n        }\n    };\n    ExecutionDisplay.prototype.resetIndent = function () {\n        this.currentIndent = \"\";\n    };\n    ExecutionDisplay.prototype.increaseIndent = function () {\n        this.currentIndent += this.indent;\n    };\n    ExecutionDisplay.prototype.decreaseIndent = function () {\n        this.currentIndent = this.currentIndent.substr(0, this.currentIndent.length - this.indent.length);\n    };\n    return ExecutionDisplay;\n}());\nexports.ExecutionDisplay = ExecutionDisplay;\n//# sourceMappingURL=execution-display.js.map","/home/travis/build/npmtest/node-npmtest-jasmine-spec-reporter/node_modules/jasmine-spec-reporter/built/display/processors/default-processor.js":"\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar display_processor_1 = require(\"../display-processor\");\nvar DefaultProcessor = (function (_super) {\n    __extends(DefaultProcessor, _super);\n    function DefaultProcessor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    DefaultProcessor.displaySpecDescription = function (spec) {\n        return spec.description;\n    };\n    DefaultProcessor.prototype.displayJasmineStarted = function () {\n        return \"Spec started\";\n    };\n    DefaultProcessor.prototype.displaySuite = function (suite) {\n        return suite.description;\n    };\n    DefaultProcessor.prototype.displaySuccessfulSpec = function (spec) {\n        return DefaultProcessor.displaySpecDescription(spec);\n    };\n    DefaultProcessor.prototype.displayFailedSpec = function (spec) {\n        return DefaultProcessor.displaySpecDescription(spec);\n    };\n    DefaultProcessor.prototype.displaySpecErrorMessages = function (spec) {\n        return this.displayErrorMessages(spec, this.configuration.spec.displayStacktrace);\n    };\n    DefaultProcessor.prototype.displaySummaryErrorMessages = function (spec) {\n        return this.displayErrorMessages(spec, this.configuration.summary.displayStacktrace);\n    };\n    DefaultProcessor.prototype.displayPendingSpec = function (spec) {\n        return DefaultProcessor.displaySpecDescription(spec);\n    };\n    DefaultProcessor.prototype.displayErrorMessages = function (spec, withStacktrace) {\n        var logs = [];\n        for (var _i = 0, _a = spec.failedExpectations; _i < _a.length; _i++) {\n            var failedExpectation = _a[_i];\n            logs.push(\"- \".failed + failedExpectation.message.failed);\n            if (withStacktrace && failedExpectation.stack) {\n                logs.push(this.configuration.stacktrace.filter(failedExpectation.stack));\n            }\n        }\n        return logs.join(\"\\n\");\n    };\n    return DefaultProcessor;\n}(display_processor_1.DisplayProcessor));\nexports.DefaultProcessor = DefaultProcessor;\n//# sourceMappingURL=default-processor.js.map","/home/travis/build/npmtest/node-npmtest-jasmine-spec-reporter/node_modules/jasmine-spec-reporter/built/display/display-processor.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DisplayProcessor = (function () {\n    function DisplayProcessor(configuration) {\n        this.configuration = configuration;\n    }\n    DisplayProcessor.prototype.displayJasmineStarted = function (info, log) {\n        return log;\n    };\n    DisplayProcessor.prototype.displaySuite = function (suite, log) {\n        return log;\n    };\n    DisplayProcessor.prototype.displaySpecStarted = function (spec, log) {\n        return log;\n    };\n    DisplayProcessor.prototype.displaySuccessfulSpec = function (spec, log) {\n        return log;\n    };\n    DisplayProcessor.prototype.displayFailedSpec = function (spec, log) {\n        return log;\n    };\n    DisplayProcessor.prototype.displaySpecErrorMessages = function (spec, log) {\n        return log;\n    };\n    DisplayProcessor.prototype.displaySummaryErrorMessages = function (spec, log) {\n        return log;\n    };\n    DisplayProcessor.prototype.displayPendingSpec = function (spec, log) {\n        return log;\n    };\n    return DisplayProcessor;\n}());\nexports.DisplayProcessor = DisplayProcessor;\n//# sourceMappingURL=display-processor.js.map","/home/travis/build/npmtest/node-npmtest-jasmine-spec-reporter/node_modules/jasmine-spec-reporter/built/display/processors/spec-colors-processor.js":"\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar display_processor_1 = require(\"../display-processor\");\nvar SpecColorsProcessor = (function (_super) {\n    __extends(SpecColorsProcessor, _super);\n    function SpecColorsProcessor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SpecColorsProcessor.prototype.displaySuccessfulSpec = function (spec, log) {\n        return log.successful;\n    };\n    SpecColorsProcessor.prototype.displayFailedSpec = function (spec, log) {\n        return log.failed;\n    };\n    SpecColorsProcessor.prototype.displayPendingSpec = function (spec, log) {\n        return log.pending;\n    };\n    return SpecColorsProcessor;\n}(display_processor_1.DisplayProcessor));\nexports.SpecColorsProcessor = SpecColorsProcessor;\n//# sourceMappingURL=spec-colors-processor.js.map","/home/travis/build/npmtest/node-npmtest-jasmine-spec-reporter/node_modules/jasmine-spec-reporter/built/display/processors/spec-durations-processor.js":"\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar display_processor_1 = require(\"../display-processor\");\nvar SpecDurationsProcessor = (function (_super) {\n    __extends(SpecDurationsProcessor, _super);\n    function SpecDurationsProcessor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SpecDurationsProcessor.displayDuration = function (spec, log) {\n        return log + \" (\" + spec.duration + \")\";\n    };\n    SpecDurationsProcessor.prototype.displaySuccessfulSpec = function (spec, log) {\n        return SpecDurationsProcessor.displayDuration(spec, log);\n    };\n    SpecDurationsProcessor.prototype.displayFailedSpec = function (spec, log) {\n        return SpecDurationsProcessor.displayDuration(spec, log);\n    };\n    return SpecDurationsProcessor;\n}(display_processor_1.DisplayProcessor));\nexports.SpecDurationsProcessor = SpecDurationsProcessor;\n//# sourceMappingURL=spec-durations-processor.js.map","/home/travis/build/npmtest/node-npmtest-jasmine-spec-reporter/node_modules/jasmine-spec-reporter/built/display/processors/spec-prefixes-processor.js":"\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar display_processor_1 = require(\"../display-processor\");\nvar SpecPrefixesProcessor = (function (_super) {\n    __extends(SpecPrefixesProcessor, _super);\n    function SpecPrefixesProcessor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SpecPrefixesProcessor.prototype.displaySuccessfulSpec = function (spec, log) {\n        return this.configuration.prefixes.successful + log;\n    };\n    SpecPrefixesProcessor.prototype.displayFailedSpec = function (spec, log) {\n        return this.configuration.prefixes.failed + log;\n    };\n    SpecPrefixesProcessor.prototype.displayPendingSpec = function (spec, log) {\n        return this.configuration.prefixes.pending + log;\n    };\n    return SpecPrefixesProcessor;\n}(display_processor_1.DisplayProcessor));\nexports.SpecPrefixesProcessor = SpecPrefixesProcessor;\n//# sourceMappingURL=spec-prefixes-processor.js.map","/home/travis/build/npmtest/node-npmtest-jasmine-spec-reporter/node_modules/jasmine-spec-reporter/built/display/processors/suite-numbering-processor.js":"\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar display_processor_1 = require(\"../display-processor\");\nvar SuiteNumberingProcessor = (function (_super) {\n    __extends(SuiteNumberingProcessor, _super);\n    function SuiteNumberingProcessor() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.suiteHierarchy = [];\n        return _this;\n    }\n    SuiteNumberingProcessor.getParentName = function (element) {\n        return element.fullName.replace(element.description, \"\").trim();\n    };\n    SuiteNumberingProcessor.prototype.displaySuite = function (suite, log) {\n        return this.computeNumber(suite) + \" \" + log;\n    };\n    SuiteNumberingProcessor.prototype.computeNumber = function (suite) {\n        this.computeHierarchy(suite);\n        return this.computeHierarchyNumber();\n    };\n    SuiteNumberingProcessor.prototype.computeHierarchy = function (suite) {\n        var parentName = SuiteNumberingProcessor.getParentName(suite);\n        var i = 0;\n        for (; i < this.suiteHierarchy.length; i++) {\n            if (this.suiteHierarchy[i].name === parentName) {\n                this.suiteHierarchy[i].number++;\n                this.suiteHierarchy.splice(i + 1, this.suiteHierarchy.length - i - 1);\n                break;\n            }\n        }\n        if (i === this.suiteHierarchy.length) {\n            this.suiteHierarchy.push({ name: parentName, number: 1 });\n        }\n    };\n    SuiteNumberingProcessor.prototype.computeHierarchyNumber = function () {\n        var hierarchyNumber = \"\";\n        for (var _i = 0, _a = this.suiteHierarchy; _i < _a.length; _i++) {\n            var suite = _a[_i];\n            hierarchyNumber += suite.number + \".\";\n        }\n        return hierarchyNumber.substring(0, hierarchyNumber.length - 1);\n    };\n    return SuiteNumberingProcessor;\n}(display_processor_1.DisplayProcessor));\nexports.SuiteNumberingProcessor = SuiteNumberingProcessor;\n//# sourceMappingURL=suite-numbering-processor.js.map","/home/travis/build/npmtest/node-npmtest-jasmine-spec-reporter/node_modules/jasmine-spec-reporter/built/types.js":"//# sourceMappingURL=types.js.map","/home/travis/build/npmtest/node-npmtest-jasmine-spec-reporter/node_modules/jasmine-spec-reporter/built/display/colors-theme.js":"//# sourceMappingURL=colors-theme.js.map"}